- BUG: "/" count as part of a string -- need to switch to tree at this point

- TODO: Get test coverage

Routes:
	- BUG: Doesn't handle routes with more than one variable
	- BUG: How do we handle trailing "/":
		- In RegistrationRoute?
		- In Request URL?


	- TODO: Throw HTTP error if the data isn't of the type specified in the variable
	- TODO: Enable CORS per Route / on ALL routes
	- TODO: Allow method restriction per Route
	- TODO: Refactor variable retrieval -- code duplication

Multiplexer:
	- TODO: Generalize route matching
		- With things like a fileserver, it only matches exactly
		- Need to look into when to catch a general route and when
		to catch an exact route
	- TODO: Look into concurrency
	- TODO: Allow setting default response headers per route
	- TODO: Overwrite responseWriter that lets me store the status code
		to handle responding with default errorHandlers
	- TODO: Move to a tree based registration

	- RESEARCH: Registering multiple routes where only variable changes in same location
		- OPTION: 2 routes, check type, serve based on type
		- OPTION: Replace route with new route and error/warn
		- QUESTION: Is this something that would occur?
	- RESEARCH: Concurrency
		- Performance without goroutines
		- Performance with goroutines
		- Testing with goroutines serving via mux

- Documentation
	- TODO: Document objects
	- TODO: Document functions
	- TODO: Document example, setup, usage

- Benchmark
	- TODO: Create benchmark tests to benchmark the Multiplexer
		- Route registration
		- Route matching
		- Request serving

RESEARCH NOTES
--------------

* Wildcard registration
Wildcard registration is the same as using a variable that you don't
care about. This is an adequate solution for now.
